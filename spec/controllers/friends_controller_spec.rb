require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe FriendsController, :type => :request do
  describe 'POST /friends' do
    context 'CRUD on firends' do
      it 'returns list of friends' do
        get '/friends',
             headers: { 'HTTP_AUTH_TOKEN': user_token }

        expect(response.status).to eq 200

      end
    end
  end

  def user_token
    post '/users', params: {user: {email:'nilayannad@gmail.com', password:'12345678', first_name: 'Nilay', last_name: 'Anand'}}
    response_body['data']['auth_token']
  end
  def response_body
    JSON.parse(response.body)
  end
end
